// @generated by protobuf-ts 2.9.0 with parameter server_grpc1
// @generated from protobuf file "example.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { UserService } from "./example";
import type { Address } from "./example_dep";
import type { GetUserAddressRequest } from "./example";
import type { CreateUserResponse } from "./example";
import type { CreateUserRequest } from "./example";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { User } from "./example";
import type { GetUserRequest } from "./example";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service UserService
 */
export interface IUserServiceClient {
    /**
     * @generated from protobuf rpc: GetUser(GetUserRequest) returns (User);
     */
    getUser(input: GetUserRequest, options?: RpcOptions): UnaryCall<GetUserRequest, User>;
    /**
     * @generated from protobuf rpc: Createuser(CreateUserRequest) returns (CreateUserResponse);
     */
    createuser(input: CreateUserRequest, options?: RpcOptions): UnaryCall<CreateUserRequest, CreateUserResponse>;
    /**
     * @generated from protobuf rpc: GetUserAddress(GetUserAddressRequest) returns (Address);
     */
    getUserAddress(input: GetUserAddressRequest, options?: RpcOptions): UnaryCall<GetUserAddressRequest, Address>;
}
/**
 * @generated from protobuf service UserService
 */
export class UserServiceClient implements IUserServiceClient, ServiceInfo {
    typeName = UserService.typeName;
    methods = UserService.methods;
    options = UserService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetUser(GetUserRequest) returns (User);
     */
    getUser(input: GetUserRequest, options?: RpcOptions): UnaryCall<GetUserRequest, User> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserRequest, User>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Createuser(CreateUserRequest) returns (CreateUserResponse);
     */
    createuser(input: CreateUserRequest, options?: RpcOptions): UnaryCall<CreateUserRequest, CreateUserResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateUserRequest, CreateUserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUserAddress(GetUserAddressRequest) returns (Address);
     */
    getUserAddress(input: GetUserAddressRequest, options?: RpcOptions): UnaryCall<GetUserAddressRequest, Address> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserAddressRequest, Address>("unary", this._transport, method, opt, input);
    }
}
